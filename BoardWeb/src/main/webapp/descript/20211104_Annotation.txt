@ : 어노테이션(annotation)을 이용하여 의존 주입
	
- 설정.xml 문서 : 어노테이션을 스캔할수 있는 context 네임스페이스가 필요
	
	
	어노테이션을 스캔할수 있는 범위(패키지) 설정.
	어노테이션 스캔 범위 설정

	- 패키지 : com.freeflux.biz
	com.freeflux.biz.net
	com.freeflux.biz.data
	com.freeflux.biz.file
	
	<context:component-scan base-package="com.freeflux.biz.net"></context:component-scan>
	<context:component-scan base-package="com.freeflux.biz"></context:component-scan>
	
	- 자바 클래스
	클래스 선언부 위쪽에 @Component 어노테이션을 추가
	@Component : Component 클래스를 impport
	@Component : 객체요청시 글래스명의 첫글자를 소문자로 변경하여 요청가능
	
	객체명을 지정하고 싶을 경우에는 @Component("객체명") 과 같이 설정
	---------------------------------------------------------
	스프링이 지원하는 의존주입 어노테이션
	
	@Autowired : 멤버변수 위에 주로 사용 (해당타입의 객체를 찾아서 자동 주입)
	예) @Autiwired
	   private AppleSpeaker apple;
	
	@Qualifier : 특정 객체의 이름을 이용하여 의존성 주입
	
	@Inject : @Autowired과 동일
	
	@Resource : @Autowired 과 @Qualifier 기능을 결합
	---------------------------------------------------
	@Autowired : 주로 멤버변수위에 사용되지만, 생성자 또는 메서드에서도 사용 가능
	<context:component-scan base-package="polymorphism"></context:component-scan>
	
	@Component("tv")
	public class LgTV implements TV {~~}
	
	@Component("samsung")
	public class SamsungTV implements TV {~~ }
	---------------------------------------------------------
	TV 공유 타입
	"tv" : LgTV
	"samsung" : SamsungTV
	
	@Component("sony")
	public class SonySpeaker implements Speaker{~~}
	
	@Component("apple")
	public class AppleSpeaker implements Speaker {~~}
	---------------------------------------------------------
	TV 공유 타입
	"tv" : LgTV
	"samsung" : SamsungTV
	
	Speaker 공유 타입
	"sony" : SonySpeaker
	"apple" : AppleSpeaker
	
	@Autowired : 현재 생성된 객체 중에서 Speaker 타입을 가진 객체를
	
	speaker 변수에 자동 의존성 주입을 하되
	@Qualifier("apple") : 객체명이 "apple"인 객체를 주입
	private Speaker speaker;
	---------------------------------------------------------
	@Resource : @Autowired + @Qualifier
	
	@Resource(name="apple")
	private Speaker speaker;
	===================================================================
설정 xml 내부에 <bean> 태그 설정과
자바 클래스 내부 @어노테이션 설정을 병행하여 사용!!!!