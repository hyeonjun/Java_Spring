Mybatis 작업

1. Mapper 파일 생성(xml)

2. DataSource를 위한 properties 파일 생성(.properties)

3. Mapper파일과 Properties 파일을 연결해주는 Configuration 파일 생성(xml)

4. Configuration 파일 로딩을 위한 Java 파일 생성

4-1. Java 파일 내용 : 반드시 Java design pattern 중 singletone을 이용
	1. Configuration 파일 로딩
	2. 로딩된 Configuration 파일 내용을 토대로 Mybatis 작업을 할 수 있는 객체 생성
	
	* singletone : 생성된 객체가 단 하나만 존재할 수 있도록 코드 구현하는 패턴
		1. 클래스의 생성자는 반드시 private로 선언하여 외부에서 별도의 객체 생성을 방지
		2. 클래스의 객체를 저장할 수 있는 멤버변수는 반드시 static을 이용하여 공유될 수 있도록 선언
		3. public 메서드를 이용하여 클래스 자신의 객체를 생성하여 멤버변수에 저장하여 return 할 수 있도록 작성
		
	
Mybatis Java 파일 : SqlSessionFactoryBean

멤버변수타입 : SqlSessionFactory (SqlSession 객체를 추출하기 위한 공장) <= private static SqlSessionFactory 변수명 = null;

Configuration 파일 로딩과 Mybatis 작업을 할 수 있는 객체 생성 코드
	static{
		try{
			if(멤버변수에 객체가 존재하는지를 파악){
				존재하지 않을 경우:xml 로딩 후, 해당 객체 생성
			}
		}catch{
		
		}
	}

외부에서 객체를 얻어내기 위한 메서드 : public static SqlSession 메서드명(){~~}
=> SqlSessionFactory으로부터 SqlSession 객체를 반환하는 역할

===============================================================================

XML 문서의 특징
1. 제공되는 태그가 없다.
	=> 각 개발사들이 태그를 선언해서 사용
	=> 선언한 태그들은 DTD 문서를 통해 정의

2. 꾸미는 요소가 없다.
	=> 단, 서식을 만들 수 있는 기본 내용 제공(XSLT)

3. 데이터 호환을 위한 문서
예)  A 회사는 Java 기반의 OracleDB 사용
	B 회사는 PHP 기반의 MySQL 사용
	
	A와 B 회사 간의 전자상거래에 대한 문서를 주고 받을 경우, 서로 간의 시스템이 달라 데이터 호환이 불가능하다
	따라서 두 회사간의 서식을 주고받을 경우 XML 문서를 기반으로 서식을 만들어서 주고 받는다

XML 문서 작성 방법
1. welform 문서 : 단순히 xml 문서만 존재
2. valid 문서 : xml문서과 DTD 문서 두가지로 존재
=> XML 태그를 개발하는 회사는 valid 문서로 개발
=> 실제 사용하는 회사(개발자)는 welform 문서 사용

welform 문서 작성 방법
1. xml 선언부 : <?xml version="1.0" encoding="UTF-8" ?>
2. 태그 해석을 위한 DTD 설정
	<!DOCTYPE>				: Mybatis
	<RootTag xmlns="~~~">	: Tomcat/Spring

서버 개발자는 XML 문서를 다룰 줄 알아야한다.

서버 개발자 : 시스템 운영체제에서 구동할 수 있는 개발

===============================================================================

1. View 파라미터명 (name="")
2. VO 객체의 멤버변수명
3. Table 필드명
이 모두 일치(대소문자)해야한다

1과 2는 Spring에서 자동 매핑 시 2와 3은 Mybatis에서 자동 매핑

resultMap은 2와 3이 일치하지 않았을 경우 
















